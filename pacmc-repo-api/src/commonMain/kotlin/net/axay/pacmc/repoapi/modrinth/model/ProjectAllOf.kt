/**
 * Labrinth
 *
 * This API is documented in the **OpenAPI format** and is available for download [here](/openapi.yaml).  There are some undocumented routes. These routes are not meant for public use, such as the routes for adding new items to tags.  ## Cross-Origin Resource Sharing This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with the [W3C spec](https://www.w3.org/TR/cors/). This allows for cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.  ## Authentication This API uses GitHub tokens for authentication. The token is in the `Authorization` header of the request. You can get a token [here](#operation/initAuth).    Example:  ```  Authorization: gho_pJ9dGXVKpfzZp4PUHSxYEq9hjk0h288Gwj4S  ```  ## Ratelimits The API has a ratelimit defined per IP. Limits and remaining amounts are given in the response headers. The `X-Ratelimit-Limit` header is the maximum number of requests that can be made in a minute. The `X-Ratelimit-Remaining` header is the number of requests remaining in the current ratelimit window. The `X-Ratelimit-Reset` header is the time in seconds until the ratelimit window resets. 
 *
 * The version of the OpenAPI document: f3234a6 (v2)
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.axay.pacmc.repoapi.modrinth.model

import net.axay.pacmc.repoapi.modrinth.model.ProjectAllOfGallery
import net.axay.pacmc.repoapi.modrinth.model.ProjectAllOfModeratorMessage

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param id The ID of the project, encoded as a base62 string
 * @param team The ID of the team that has ownership of this project
 * @param published The date the project was published
 * @param updated The date the project was last updated
 * @param followers The total number of users following the project
 * @param moderatorMessage 
 * @param versions A list of the version IDs of the project (will never be empty unless `draft` status)
 * @param gallery A list of images that have been uploaded to the project's gallery
 */
@Serializable
data class ProjectAllOf (

    /* The ID of the project, encoded as a base62 string */
    @SerialName(value = "id") @Required val id: kotlin.String,

    /* The ID of the team that has ownership of this project */
    @SerialName(value = "team") @Required val team: kotlin.String,

    /* The date the project was published */
    @SerialName(value = "published") @Required val published: kotlin.String,

    /* The date the project was last updated */
    @SerialName(value = "updated") @Required val updated: kotlin.String,

    /* The total number of users following the project */
    @SerialName(value = "followers") @Required val followers: kotlin.Int,

    @SerialName(value = "moderator_message") val moderatorMessage: ProjectAllOfModeratorMessage? = null,

    /* A list of the version IDs of the project (will never be empty unless `draft` status) */
    @SerialName(value = "versions") val versions: kotlin.collections.List<kotlin.String>? = null,

    /* A list of images that have been uploaded to the project's gallery */
    @SerialName(value = "gallery") val gallery: kotlin.collections.List<ProjectAllOfGallery>? = null

)

