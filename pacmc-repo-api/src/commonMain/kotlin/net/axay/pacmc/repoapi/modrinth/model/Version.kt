/**
 * Labrinth
 *
 * This API is documented in the **OpenAPI format** and is available for download [here](/openapi.yaml).  # Cross-Origin Resource Sharing This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/). This allows for cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.  # Authentication This API uses GitHub tokens for authentication. The token is in the `Authorization` header of the request. You can get a token [here](#operation/initAuth).    Example:  ```  Authorization: gho_pJ9dGXVKpfzZp4PUHSxYEq9hjk0h288Gwj4S  ``` 
 *
 * The version of the OpenAPI document: 13187de (v2)
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.axay.pacmc.repoapi.modrinth.model

import net.axay.pacmc.repoapi.modrinth.model.BaseVersion
import net.axay.pacmc.repoapi.modrinth.model.VersionAllOf
import net.axay.pacmc.repoapi.modrinth.model.VersionAllOfFiles

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param name The name of this version
 * @param versionNumber The version number. Ideally will follow semantic versioning
 * @param changelog The changelog for this version
 * @param changelogUrl A link to the changelog for this version
 * @param dependencies A list of specific versions of projects that this version depends on
 * @param gameVersions A list of versions of Minecraft that this version supports
 * @param versionType The release channel for this version
 * @param loaders The mod loaders that this version supports
 * @param featured Whether the version is featured or not
 * @param id The ID of the version, encoded as a base62 string
 * @param projectId The ID of the project this version is for
 * @param authorId The ID of the author who published this version
 * @param datePublished 
 * @param downloads The number of times this version has been downloaded
 * @param files A list of files available for download for this version
 */
@Serializable
data class Version (

    /* The name of this version */
    @SerialName(value = "name") val name: kotlin.String? = null,

    /* The version number. Ideally will follow semantic versioning */
    @SerialName(value = "version_number") val versionNumber: kotlin.String? = null,

    /* The changelog for this version */
    @SerialName(value = "changelog") val changelog: kotlin.String? = null,

    /* A link to the changelog for this version */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "changelog_url") val changelogUrl: kotlin.String? = null,

    /* A list of specific versions of projects that this version depends on */
    @SerialName(value = "dependencies") val dependencies: kotlin.collections.List<kotlin.String>? = null,

    /* A list of versions of Minecraft that this version supports */
    @SerialName(value = "game_versions") val gameVersions: kotlin.collections.List<kotlin.String>? = null,

    /* The release channel for this version */
    @SerialName(value = "version_type") val versionType: Version.VersionType? = null,

    /* The mod loaders that this version supports */
    @SerialName(value = "loaders") val loaders: kotlin.collections.List<kotlin.String>? = null,

    /* Whether the version is featured or not */
    @SerialName(value = "featured") val featured: kotlin.Boolean? = null,

    /* The ID of the version, encoded as a base62 string */
    @SerialName(value = "id") val id: kotlin.String? = null,

    /* The ID of the project this version is for */
    @SerialName(value = "project_id") val projectId: kotlin.String? = null,

    /* The ID of the author who published this version */
    @SerialName(value = "author_id") val authorId: kotlin.String? = null,

    @SerialName(value = "date_published") val datePublished: kotlin.String? = null,

    /* The number of times this version has been downloaded */
    @SerialName(value = "downloads") val downloads: kotlin.Int? = null,

    /* A list of files available for download for this version */
    @SerialName(value = "files") val files: kotlin.collections.List<VersionAllOfFiles>? = null

) {

    /**
     * The release channel for this version
     *
     * Values: release,beta,alpha
     */
    @Serializable
    enum class VersionType(val value: kotlin.String) {
        @SerialName(value = "release") release("release"),
        @SerialName(value = "beta") beta("beta"),
        @SerialName(value = "alpha") alpha("alpha");
    }
}

